@model UsuarioViewModel
@{
	Layout = "_LayoutDeslogado";
	ViewData["Title"] = "Entrar";
}
<body>
	@if (TempData["MensagemErro"] != null)
	{
		<div class="alert alert-danger" role="alert">
			<button type="button" class="btn btn-danger btn-sm close-alert" aria-label="Close">X</button>
			@Html.Raw(TempData["MensagemErro"])
		</div>
	}
	<div class="d-flex justify-content-center align-items-center" style="height: 90vh;">
		<div class="card" style="width: 48rem;">
			<div class="row">
				<div class="col">
					<img class="card-img-top" src="@Url.Content("~/images/anatomy.png")">
				</div>
				<div class="col">
					<form asp-action="Autenticar" asp-controller="Autenticacao" method="post" novalidate="">
						<br>
						<h3 class="identifique"><b>Identifique-se</b><img src="~/images/Esf_Logo.jpg" height="50px" /></h3>
						<div class="form-floating mb-3">
							<input asp-for="CPF" class="form-control" id="floatingInput" placeholder="Digite seu CPF">
							<label for="floatingInput">CPF</label>
							@Html.ValidationMessageFor(x => x.CPF)
                        </div>
						<br>
						<div class="form-floating">
							<input asp-for="Senha" type="password" class="form-control" id="floatingPassword" placeholder="Digite sua senha">
							<label for="floatingPassword">Senha</label>
							@Html.ValidationMessageFor(x => x.Senha)
						</div>

						<br>
						<div class="login">
							<div class="d-flex justify-content-between align-items-center">
                                <button type="submit" class="btn btn-primary" style="width: 85%;"><b>Entrar</b></button>
							</div>
						</div>
						<br>
					</form>
				</div>
			</div>
			<div class="card-body">
				<h3 class="card-text">É um funcionário do ESF?</h3>
				<h3> Faça seu login.</h3>
			</div>
		</div>
	</div>
</body>

